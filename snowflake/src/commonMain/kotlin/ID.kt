/*
 * üêª‚Äç‚ùÑÔ∏è‚ùÑ Snowflake: Easy to use Kotlin library to help you generate Twitter snowflakes asynchronously
 * Copyright (c) 2022-2023 Noelware Team <team@noelware.org>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package org.noelware.charted.snowflake

import kotlinx.datetime.Instant

/**
 * Represents the actual ID that was generated by a [Snowflake]
 */
public class ID(
    @Suppress("MemberVisibilityCanBePrivate") public val value: Long,
    private val epoch: Long
) {
    private val maskNodeId = ((1L shl nodeBits) - 1) shl sequenceBits
    private val maskSequence = (1L shl sequenceBits) - 1

    /**
     * Returns the node id that this ID was generated from
     */
    public val nodeId: Long
        get() = (value and maskNodeId) shr sequenceBits

    /**
     * Returns the sequence number
     */
    public val sequence: Long
        get() = (value and maskSequence)

    /**
     * Returns a [Instant] of when this ID was generated at
     */
    public val timestamp: Instant
        get() = Instant.fromEpochMilliseconds((value shr (nodeBits + sequenceBits)) + epoch)

    override fun toString(): String = "org.noelware.charted.snowflake.ID[$value]"
}
